{"version":3,"sources":["webpack://axon/webpack/bootstrap","webpack://axon/./src/api/v1/handlers/health.js","webpack://axon/./src/api/v1/routes/index.js","webpack://axon/./src/error/codes.js","webpack://axon/./src/error/index.js","webpack://axon/./src/error/utils.js","webpack://axon/./src/main.js","webpack://axon/./src/middleware/accessLogger.js","webpack://axon/./src/middleware/error.js","webpack://axon/./src/middleware/transaction.js","webpack://axon/./src/router.js","webpack://axon/./src/server.js","webpack://axon/./src/utils/logger.js","webpack://axon/./src/utils/sigInitHandler.js","webpack://axon/./src/utils/uncaughtExceptionHandler.js","webpack://axon/./src/utils/unhandledRejectionHandler.js","webpack://axon/external \"bunyan\"","webpack://axon/external \"config\"","webpack://axon/external \"domain\"","webpack://axon/external \"events\"","webpack://axon/external \"fs\"","webpack://axon/external \"https\"","webpack://axon/external \"koa\"","webpack://axon/external \"koa-body\"","webpack://axon/external \"koa-compress\"","webpack://axon/external \"koa-cors\"","webpack://axon/external \"koa-helmet\"","webpack://axon/external \"koa-morgan\"","webpack://axon/external \"koa-router\"","webpack://axon/external \"process\"","webpack://axon/external \"uuid/v4\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_callee","ctx","regeneratorRuntime","wrap","_context","prev","next","status","body","stop","this","router","Router","health","DEFAULT_FATAL_ERROR","DEFAULT_GENERAL_ERROR","FATAL_ERROR","code","category","message","arguments","length","undefined","DEFAULT_INVALID_REQUEST","GENERAL_ERROR","NOT_YET_IMPLEMENTED","ILLEGAL_STATE_EXCEPTION","DEFAULT_FORBIDDEN","INVALID_REQUEST","UNAUTHORIZED","DEFAULT_SERVICE_UNAVAILABLE","FORBIDDEN","MISSING_REQUIRED_PARAMETER","DEFAULT_VALIDATION_ERROR","SERVICE_UNAVAILABLE","VALIDATION_ERROR","_utils","codes","ApiError","payload","e","_classCallCheck","_this","_possibleConstructorReturn","_Error","resolveMessage","resolveCode","resolveStatus","error","Error","captureStackTrace","constructor","stack","AuthorizationError","_ApiError","NOT_ALLOWED","InternalError","_ApiError2","InvalidRequestError","_ApiError3","ServiceUnavailableError","_ApiError4","_typeof","DEFAULT_CODE","DEFAULT_MESSAGE","DEFAULT_STATUS","_error","Server","Logger","LOGGER","getLogger","formatter","tokens","request","response","responseTime","JSON","stringify","remote-addr","date","method","url","HTTP","user-agent","referrer","res[content-length]","res","response-time","_koaMorgan2","default","stream","write","info","parse","err","t0","app","emit","transactionId","_v2","transaction","domain","add","data","id","Promise","resolve","reject","run","_asyncToGenerator","mark","abrupt","use","v1","routes","process","on","sigInitHandler","uncaughtExceptionHandler","unhandledRejectionHandler","config","appRouter","_EventEmitter","baseRouter","destroy","Koa","logger","initialize","allowedMethods","createServer","server","secure","createHttpsServer","redirect","hostname","port","sslConfig","ssl","httpsConfig","assign","fs","readFileSync","cert","https","callback","getListenCallback","_this2","send","_koaHelmet2","_koaCors2","cors","_koaCompress2","compress","_koaBody2","transactionMiddleware","accessLogger","errorMiddleware","initializeRouter","start","listen","close","EventEmitter","DEFAULT_LOGGER_NAME","_emit","rec","noemit","serializeTransaction","_Bunyan","session","sessionId","user","username","handlersConfig","loggers","handlers","loggerName","toLowerCase","Bunyan","exit","require"],"mappings":"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","file":"axon.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @module api/v1/handlers/health\n * @exports health\n */\n\n/**\n * Health check handler.\n * Responds to requests with a 200 and an 'OK'.\n * Used by external services to determine if the application is alive or not.\n * @param  {Object} ctx  The Koa context\n * @return {void}\n * @async\n */\nexport default async function health(ctx: Object): void {\n  ctx.status = 200;\n  ctx.body = 'OK';\n}\n","/**\n * V1 Router.\n * Defines the health check route.\n * @module api/v1/routes\n * @exports V1 Router\n */\n\nimport Router from 'koa-router';\n\nimport health from 'axon/api/v1/handlers/health';\n\nconst router = new Router();\n\nrouter.get('/health', health);\n\nexport default router;\n","/**\n * @module error/codes\n * @exports DEFAULT_FATAL_ERROR\n * @exports FATAL_ERROR\n * @exports DEFAULT_GENERAL_ERROR\n * @exports GENERAL_ERROR\n * @exports NOT_YET_IMPLEMENTED\n * @exports ILLEGAL_STATE_EXCEPTION\n * @exports DEFAULT_INVALID_REQUEST\n * @exports INVALID_REQUEST\n * @exports DEFAULT_UNAUTHORIZED\n * @exports UNAUTHORIZED\n * @exports DEFAULT_FORBIDDEN\n * @exports FORBIDDEN\n * @exports MISSING_REQUIRED_PARAMETER\n * @exports DEFAULT_SERVICE_UNAVAILABLE\n * @exports SERVICE_UNAVAILABLE\n * @exports DEFAULT_VALIDATION_ERROR\n * @exports VALIDATION_ERROR\n */\n\n/**\n * Default error message to surface to clients for unrecoverable errors.\n * @type {string}\n */\nexport const DEFAULT_FATAL_ERROR: string =\n  'An error occurred. If this error persists, please contact your System Administrator';\n\n/**\n * Factory to generate a 500 Error Message payload from the provided message.\n * Message defaults to DEFAULT_FATAL_ERROR.\n * ```\n * {\n *   status: 500,\n *   code: -1,\n *   category: 'IllegalStateException',\n *   message,\n * }\n * ```\n * @type {Function}\n */\nexport const FATAL_ERROR: Function = (message: string = DEFAULT_FATAL_ERROR): Object => {\n  return {\n    status: 500,\n    code: -1,\n    category: 'IllegalStateException',\n    message,\n  };\n};\n\n/**\n * Whimsical default error message to surface to clients when no additional\n * Error details are available or should be obfuscated when responding with a\n * generalized 400 error.\n * @type {string}\n */\nexport const DEFAULT_GENERAL_ERROR: string = \"Our hamsters don't know how to handle that request\";\n\n/**\n * Factory to generate a 400 Error Message payload from the provided message.\n * Message defaults to DEFAULT_GENERAL_ERROR.\n * ```\n * {\n *   status: 400,\n *   code: '0a',\n *   category: 'GeneralException',\n *   message,\n * }\n * ```\n * @type {Function}\n */\nexport const GENERAL_ERROR: Function = (message: string = DEFAULT_GENERAL_ERROR): Object => {\n  return {\n    status: 400,\n    code: '0a',\n    category: 'GeneralException',\n    message,\n  };\n};\n\n/**\n * Not Yet Implemented (501) Error Factory.\n * Returns the payload:\n * ```\n * {\n *   status: 501,\n *   code: 1,\n *   category: 'NotYetImplemented',\n *   message: 'This method must be implmented',\n * }\n * ```\n * @type {Function}\n */\nexport const NOT_YET_IMPLEMENTED: Function = (): Object => {\n  return {\n    status: 501,\n    code: 1,\n    category: 'NotYetImplemented',\n    message: 'This method must be implmented',\n  };\n};\n\n/**\n * Illegal State Exception (500) Error Factory.\n * Returns the payload:\n * ```\n * {\n *   status: 500,\n *   code: 2,\n *   category: 'IllegalStateException',\n *   message: 'Application not configured correctly',\n * }\n * ```\n * @type {Function}\n */\nexport const ILLEGAL_STATE_EXCEPTION: Function = (): Object => {\n  return {\n    status: 500,\n    code: 2,\n    category: 'IllegalStateException',\n    message: 'Application not configured correctly',\n  };\n};\n\n/**\n * Whimsical default error message to surface to clients when no additional\n * Error details are available or should be obfuscated when responding to an\n * invalid request.\n * @type {string}\n */\nexport const DEFAULT_INVALID_REQUEST: string = \"Our hamsters don't know how to handle that request\";\n\n/**\n * Invalid Request (400) Error Factory.\n * Generates an Error payload with the provided message, defaulting\n * DEFAULT_INVALID_REQUEST if no message is provided.\n * Returns the payload:\n * ```\n * {\n *   status: 400,\n *   code: 3,\n *   category: 'UserError',\n *   message,\n * }\n * ```\n * @type {Function}\n */\nexport const INVALID_REQUEST: Function = (message: string = DEFAULT_INVALID_REQUEST): Object => {\n  return {\n    status: 400,\n    code: 3,\n    category: 'UserError',\n    message,\n  };\n};\n\n/**\n * Default error message to surface to clients when they are no longer\n * authorized to access a particular resource or service.\n * @type {string}\n */\nconst DEFAULT_UNAUTHORIZED: string = 'Your session is no longer valid. Please login and rety';\n\n/**\n * Unauthorized (401) Error Factory.\n * Generates an Error payload with the provided message, defaulting\n * DEFAULT_UNAUTHORIZED if no message is provided.\n * Returns the payload:\n * ```\n * {\n *   status: 401,\n *   code: 4,\n *   category: 'SecurityException',\n *   message,\n * }\n * ```\n * @type {Function}\n */\nexport const UNAUTHORIZED: Function = (message: string = DEFAULT_UNAUTHORIZED): Object => {\n  return {\n    status: 401,\n    code: 4,\n    category: 'SecurityException',\n    message,\n  };\n};\n\n/**\n * Default error to surface to requests that are forbidden to make that\n * request.\n * @type {string}\n */\nexport const DEFAULT_FORBIDDEN: string = \"Whoops! You aren't allowed to do that\";\n\n/**\n * Forbidden (403) Error Factory.\n * Generates an Error payload with the provided message, defaulting\n * DEFAULT_FORBIDDEN if no message is provided.\n * Returns the payload:\n * ```\n * {\n *   status: 403,\n *   code: 5,\n *   category: 'SecurityException',\n *   message,\n * }\n * ```\n * @type {Function}\n */\nexport const FORBIDDEN: Function = (message: string = DEFAULT_FORBIDDEN): Object => {\n  return {\n    status: 403,\n    code: 5,\n    category: 'SecurityException',\n    message,\n  };\n};\n\n/**\n * Missing Required Request Parameter (malformed request) (400) Error Factory.\n * Returns the payload:\n * ```\n * {\n *   status: 400,\n *   code: 6,\n *   category: 'GeneralException',\n *   message: 'A required parameter was missing',\n * }\n * ```\n * @type {Function}\n */\nexport const MISSING_REQUIRED_PARAMETER: Function = (): Object => {\n  return {\n    status: 400,\n    code: 6,\n    category: 'GeneralException',\n    message: 'A required parameter was missing',\n  };\n};\n\n/**\n * Whimsical default error message to surface to clients when no additional\n * Error details are available or should be obfuscated when a service is not\n * available.\n * @type {string}\n */\nexport const DEFAULT_SERVICE_UNAVAILABLE: string = 'Hmmm...our hamsters appear to be taking a siesta';\n\n/**\n * Service Unavailable (503) Error Factory.\n * Generates an Error payload with the provided message, defaulting\n * DEFAULT_SERVICE_UNAVAILABLE if no message is provided.\n * Returns the payload:\n * ```\n * {\n *   status: 503,\n *   code: 7,\n *   category: 'NetworkException',\n *   message,\n * }\n * ```\n * @type {Function}\n */\nexport const SERVICE_UNAVAILABLE: Function = (message: string = DEFAULT_SERVICE_UNAVAILABLE): Object => {\n  return {\n    status: 503,\n    code: 7,\n    category: 'NetworkException',\n    message,\n  };\n};\n\n/**\n * Whimsical default error message to surface to clients when no additional\n * Error details are available or should be obfuscated when validating a\n * request fails.\n * @type {string}\n */\nexport const DEFAULT_VALIDATION_ERROR: string = 'Hmmm...the hamsters found a problem with that data';\n\n/**\n * Validation Failure (400) Error Factory.\n * Generates an Error payload with the provided message, defaulting\n * DEFAULT_VALIDATION_ERROR if no message is provided.\n * Returns the payload:\n * ```\n * {\n *   status: 400,\n *   code: 8,\n *   category: 'ValidationException',\n *   message,\n * }\n * ```\n * @type {Function}\n */\nexport const VALIDATION_ERROR: Function = (message: string = DEFAULT_VALIDATION_ERROR): Object => {\n  return {\n    status: 400,\n    code: 8,\n    category: 'ValidationException',\n    message,\n  };\n};\n","/**\n * @module error\n * @exports ApiError\n * @exports AuthorizationError\n * @exports InternalError\n * @exports InvalidRequestError\n * @exports ServiceUnavailableError\n * @exports codes\n */\nimport {\n  resolveCode,\n  resolveMessage,\n  resolveStatus,\n} from 'axon/error/utils';\nimport * as codes from 'axon/error/codes';\n\n/**\n * Base <code>Error</code> class for all Axon-specifc Errors.\n * It is recommended to either use this error to wrap generic\n * <code>Error</code>s or to create application/context-specific Error classes\n * that extend <code>ApiError</code> in order to better/more easily consume and\n * alter your application's behavior when Errors are thrown.\n *\n * <code>ApiError</code> provides a <code>message</code> and\n * <code>stack trace</code> as <code>Error</code> does, but also provides a\n * response <code>status</code> and an error </code>code</code> for use in\n * production debugging/support.\n *\n * @class\n * @extends Error\n */\nexport default class ApiError extends Error {\n  code: number;\n  error: Object;\n  status: number;\n\n  /**\n   * Supports both standard and Axon-specific paradigms of instantating a new\n   * <code>ApiError</code>.\n   * Standard instantion of an ApiError:\n   * ```\n   * new ApiError(\"some message\", 500);\n   * ```\n   *\n   * Non-standard (or Axon-specific) instantation expects a payload similar to\n   * those found in <code>codes.js</code> and extrats the\n   * <code>error code</code>, <code>status</code>, and <code>message</code>.\n   * Optionally accepts <code>Error</code> for additional meta information as\n   * the second or third argument.\n   *\n   * @constructor\n   * @param  {string|Object} payload  Either the error message or payload.\n   * @param  {number} status          Optional. The error status.\n   *                                  Error can be supplied instead.\n   * @param  {Error} e                Optional. The originating Error.\n   * @return {void}\n   */\n  constructor(payload: string|Object, status: ?number, e: ?Error): void {\n    super(resolveMessage(payload));\n    this.code = resolveCode(payload);\n    this.status = (status != null) ? resolveStatus(status) : resolveStatus(payload);\n    this.error = (!(status instanceof Error)) ? status : e;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = (new Error(this.message)).stack;\n    }\n  }\n}\n\n/**\n * Error used when a request fails security or authorization checks to prompt\n * the User or Client to refresh their session, or to indicate to other\n * services to act similarly.\n *\n * @class\n * @extends ApiError\n */\nexport class AuthorizationError extends ApiError {\n  constructor(e: ?Error) {\n    super(codes.NOT_ALLOWED, e);\n  }\n}\n\n/**\n * Thrown when an unhandled or unrecoverable error is encountered. Optionally\n * accepts a custom message when instantating.\n *\n * @class\n * @extends ApiError\n */\nexport class InternalError extends ApiError {\n  constructor(message: String, e: ?Error) {\n    super(codes.FATAL_ERROR(message), e);\n  }\n}\n\n/**\n * Generic error used to signal to a User/Client that their request was\n * invalid. Optionally accepts a custom message when instantating.\n *\n * @class\n * @extends ApiError\n */\nexport class InvalidRequestError extends ApiError {\n  constructor(message: String, e: ?Error) {\n    super(codes.INVALID_REQUEST(message), e);\n  }\n}\n\n/**\n * Error indicating that an external or internal Service is unreachable or\n * unavailable. Optionally accepts a custom message when instantating.\n *\n * @class\n * @extends ApiError\n */\nexport class ServiceUnavailableError extends ApiError {\n  constructor(message: String, e: ?Error) {\n    super(codes.SERVICE_UNAVAILABLE(message), e);\n  }\n}\n\nexport { codes };\n","/**\n * @module error/utils\n * @exports DEFAULT_CODE\n * @exports DEFAULT_MESSAGE\n * @exports DEFAULT_STATUS\n * @exports resolveCode\n * @exports resolveMessage\n * @exports resolveStatus\n */\nexport const DEFAULT_CODE: number = 0;\nexport const DEFAULT_MESSAGE: string = 'An Unknown error occurred';\nexport const DEFAULT_STATUS: number = 500;\n\n/**\n * Attempts to find the code in the provided payload if the payload is an\n * object. If the payload is a number, then `payload` is returned. Otherwise,\n * DEFAULT_CODE is returned.\n *\n * @param  {number|Object} payload\n * @return {number}\n */\nexport function resolveCode(payload: number|Object): number {\n  if (typeof payload === 'object') {\n    return ('code' in payload) ? DEFAULT_CODE : payload.code;\n  }\n\n  return (payload != null) ? payload : DEFAULT_CODE;\n}\n\n/**\n * Attempts to find the message in the provided payload if the payload is an\n * object. If the payload is a string, then `payload` is returned. Otherwise,\n * DEFAULT_MESSAGE is returned.\n *\n * @param  {string|Object} payload\n * @return {string}\n */\nexport function resolveMessage(payload: string|Object): string {\n  if (typeof payload === 'object') {\n    return ('message' in payload) ? DEFAULT_MESSAGE : payload.message;\n  }\n\n  return (payload != null) ? payload : DEFAULT_MESSAGE;\n}\n\n/**\n * Attempts to find the status in the provided payload if the payload is an\n * object. If the payload is a number, then `payload` is returned. Otherwise,\n * DEFAULT_STATUS is returned.\n *\n * @param  {number|Object} payload\n * @return {number}\n */\nexport function resolveStatus(payload: number|Object): number {\n  if (typeof payload === 'object') {\n    return ('status' in payload) ? DEFAULT_STATUS : payload.status;\n  }\n\n  return (payload != null) ? payload : DEFAULT_STATUS;\n}\n","/**\n * Main entry point for the built Axon dist/library.\n * @module main\n * @exports Allthethings\n */\n\nimport ApiError, {\n  AuthorizationError,\n  InternalError,\n  InvalidRequestError,\n  ServiceUnavailableError,\n} from 'axon/error';\nimport Logger from 'axon/utils/logger';\nimport Server from 'axon/server';\n\nimport * as codes from 'axon/error/codes';\n\nexport default Server;\nexport {\n  ApiError,\n  AuthorizationError,\n  codes,\n  InternalError,\n  InvalidRequestError,\n  Logger,\n  ServiceUnavailableError,\n};\n","/**\n * @module middleware/accessLogger\n * @exports formatter\n * @exports morgan\n */\nimport morgan from 'koa-morgan';\n\nimport Logger from 'axon/utils/logger';\n\nconst LOGGER: Object = Logger.getLogger('access');\n\n/**\n * Morgan log formatter.\n * Returns an object containing the desired request and response attributes.\n * The expected output should be a JSON string as <code>bunyan</code> will\n * take the string and merge that JSON with the output (which is the desired\n * result). The expected format is:\n * ```\n * {\n *   remote-addr: <string>,\n *   date: <clf>,\n *   method: <string>,\n *   url: <fqd string>,\n *   HTTP: <version string>,\n *   user-agent: <string>,\n *   referrer: <string>,\n *   status: <number>,\n *   res[content-length]: <number>,\n *   response-time: <number> ms,\n * }\n * ```\n *\n * @see {@link https://www.npmjs.com/package/koa-morgan}\n *\n * @param  {Object} tokens    The map of morgan tokens\n * @param  {Object} request   The request context\n * @param  {Object} response  The response context\n * @return {Object}           The format meta object\n */\nexport const formatter = function (tokens, request, response) {\n  const responseTime = tokens['response-time'](request, response);\n\n  return JSON.stringify({\n    'remote-addr': tokens['remote-addr'](request),\n    date: tokens.date(request, response, 'clf'),\n    method: tokens.method(request),\n    url: tokens.url(request),\n    HTTP: tokens['http-version'](request),\n    'user-agent': tokens['user-agent'](request),\n    referrer: tokens.referrer(request),\n    status: tokens.status(request, response),\n    'res[content-length]': tokens.res(request, response, 'content-length'),\n    'response-time': `${responseTime} ms`,\n  });\n};\n\nexport default morgan(formatter, {\n  stream: {\n    write(message) {\n      LOGGER.info(JSON.parse(message));\n    },\n  },\n});\n","/**\n * @module middleware/error\n * @exports errorMiddleware\n */\nimport ApiError, { InternalError } from 'axon/error';\nimport Logger from 'axon/utils/logger';\n\nconst LOGGER: Object = Logger.getLogger('root');\n\n/**\n * Wraps all subsequent async calls to middleware or handlers in a\n * <code>try/catch</code> block to properly handle and format errors\n * prior to sending an error reponse.\n * If the caught <code>Error</code> is not a subclass of the\n * <code>ApiError</code>, it is converted into either an\n * <code>InternalError</code> if no <code>status</code> is attached to the\n * error or the <code>status</code> is 500, or a generic <code>ApiError</code>.\n * The error is logged, the response status is set to the error\n * <code>status</code>, and the response body is set to the error. Finally the\n * `error` event is emitted on the <code>app</code>.\n *\n * @see {@link ApiError}\n * @see {@link InternalError}\n *\n * @param  {Object}   ctx  The Koa context\n * @param  {Function} next The next middleware or handler in the connect chain\n * @return {void}\n * @async\n */\nexport default async (ctx: Object, next: Function): void => {\n  try {\n    await next();\n  } catch (e) {\n    let err = e;\n\n    if (!(e instanceof ApiError)) {\n      err = (!err.status || err.status === 500) ? new InternalError(e.message, e) : new ApiError(e.message, e);\n    }\n\n    LOGGER.error(err, ctx);\n    ctx.status = err.status;\n    ctx.body = err;\n\n    ctx.app.emit('error', err, ctx);\n  }\n};\n","/**\n * @module middleware/transaction\n * @exports trasnactionMiddleware\n */\nimport domain from 'domain';\nimport uuidv4 from 'uuid/v4';\n\n/**\n * Adds a transaction identifier to every request to track a request's control\n * flow through the entire lifetime of the request, including across\n * asynchronous calls. We use a transactoin ID instead of the session ID or\n * user since both are persistent(ish) identification.\n *\n * @see {@link https://nodejs.org/api/domain.html}\n *\n * @param  {Object}   ctx  The Koa context\n * @param  {Function} next The next middleware or handler in the connect chain\n * @return {void}\n */\nexport default (ctx: Object, next: Function): void => {\n  const transactionId: string = uuidv4();\n  const transaction: Object = domain.create();\n\n  // eslint-disable-next-line no-param-reassign\n  ctx.transactionId = transactionId;\n\n  transaction.add(ctx);\n  transaction.data = {\n    id: transactionId,\n    ctx,\n  };\n\n  return new Promise((resolve, reject) => {\n    transaction.run(async () => {\n      try {\n        await next();\n        return resolve();\n      } catch (e) {\n        return reject(e);\n      }\n    });\n  });\n};\n","/**\n * Builds and exports the Axon router.\n * Typically version Routers (i.e. v1) would be mounted to the root Router with\n * a url prefix like <code>/v1</code>, but in this case, the Axon Router only\n * provides global endpoints like a health check and does not need to be\n * versioned. However, this file does establish a good pattern for organizing\n * and building application-specific Routers, so I do recommend using this as\n * boilerplate.\n * @see {@link https://github.com/alexmingoia/koa-router}\n * @module router\n * @exports Router\n */\n\nimport Router from 'koa-router';\n\nimport v1 from 'axon/api/v1/routes';\n\nconst router = new Router();\n\nrouter.use(v1.routes());\n\nexport default router;\n","import body from 'koa-body';\nimport compress from 'koa-compress';\nimport cors from 'koa-cors';\nimport EventEmitter from 'events';\nimport fs from 'fs';\nimport helmet from 'koa-helmet';\nimport https from 'https';\nimport Koa from 'koa';\n\nimport accessLogger from 'axon/middleware/accessLogger';\nimport errorMiddleware from 'axon/middleware/error';\nimport Logger from 'axon/utils/logger';\nimport baseRouter from 'axon/router';\nimport sigInitHandler from 'axon/utils/sigInitHandler';\nimport transactionMiddleware from 'axon/middleware/transaction';\nimport uncaughtExceptionHandler from 'axon/utils/uncaughtExceptionHandler';\nimport unhandledRejectionHandler from 'axon/utils/unhandledRejectionHandler';\n\n// Catches ctrl+c event\nprocess.on('SIGINT', sigInitHandler);\n\n// Catches uncaught exceptions and rejections\nprocess.on('uncaughtException', uncaughtExceptionHandler);\nprocess.on('unhandledRejection', unhandledRejectionHandler);\n\n/**\n * This class encapsulates a <code>Koa</code> application and provides an API\n * for controlling the configuration and lifecycle of application server.\n * <code>Server</code> extends <code>EventEmitter</code> to provide the following\n * event-based lifecycle triggers:\n * - `ready`\n * - `before:start`\n * - `start`\n * - `after:start`\n * - `before:stop`\n * - `destroy`\n * - `after:stop`\n *\n * <code>Server</code> contains the following public variables:\n * - `app`     The instantiated Koa application\n * - `config`  The application-specific configuration object\n * - `logger`  A reference to the app logger\n * - `router`  The combined universal and application-specific router\n *\n * @class\n * @extends {EventEmitter}\n */\nexport default class Server extends EventEmitter {\n  app: Function;\n  config: Object;\n  logger: Object;\n  router: Object = baseRouter;\n\n  /**\n   * Configures and initializes the <code>Server</code> instance.\n   * Calls <code>initialize</code>, which will call\n   * </code>initializeMiddleware</code>, and <code>initializeRouter</code>\n   * prior to emitting the `ready` event.\n   *\n   * @constructor\n   * @param {Object} config\n   * @param {Object} appRouter\n   * @return {void}\n   */\n  constructor(config: Object, appRouter: ?Object = null): void {\n    super();\n\n    // atexit handler\n    process.on('exit', this.destroy);\n\n    this.config = config;\n\n    // Initialize the express server\n    this.app = new Koa();\n\n    // Create the logger\n    this.logger = Logger.getLogger('app');\n\n    // Configure the app with common middleware\n    this.initialize();\n\n    // If an additional router is provided, merge that router into the app router\n    // so that the server has a single router entry.\n    if (appRouter) {\n      this.router.use(appRouter.routes());\n    }\n\n    // Mount the router to the server\n    this.app.use(this.router.routes());\n    this.app.use(this.router.allowedMethods());\n\n    this.emit('ready');\n  }\n\n  /**\n   * Creates and makes the NodeJS HTTP(s) server available.\n   * If the <code>secure</code> configuration option is true, then this method\n   * calls <code>createHttpsServer</code>; otherwise the default HTTP Koa\n   * server is used.\n   *\n   * @see {@link createHttpsServer}\n   * @see {@link start}\n   * @return {void}\n   */\n  createServer(): Object {\n    return (this.config.server.secure) ? this.createHttpsServer() : this.app;\n  }\n\n  /**\n   * Creates a NodeJS HTTPS server using the <code>ssl</code> configuration option.\n   * Setups a HTTP redirect to force all traffic to HTTP.\n   *\n   * @return {void}\n   */\n  createHttpsServer(): void {\n    this.app.use(function cb(ctx: Object, next: Function) {\n      if (ctx.secure) {\n        return next();\n      }\n\n      return ctx.redirect(`https://${ctx.hostname}:${this.config.server.port}${ctx.url}`);\n    });\n\n    const sslConfig = this.config.server.ssl;\n    const httpsConfig = Object.assign({}, sslConfig, {\n      key: fs.readFileSync(sslConfig.key),\n      cert: fs.readFileSync(sslConfig.cert),\n    });\n\n    return https.createServer(httpsConfig, this.app.callback());\n  }\n\n  /**\n   * Returns a Function to be used as a callback to the server start.\n   * The custom callback is invoked first, if provided. The callback function\n   * will then emit the `start` event, notify any watching proceeses via\n   * <code>process.send('ready')</code>, if <code>send</code> is available on\n   * <code>process</code>, and finally log a start message.\n   *\n   * @see {@link start}\n   * @param {Function} callback\n   * @return {Function}\n   */\n  getListenCallback(callback: Function): Function {\n    return () => {\n      if (callback != null) {\n        callback();\n      }\n\n      this.emit('start');\n\n      if (process.send) {\n        process.send('ready');\n      }\n\n      this.logger.info(`Server listening at ${this.config.server.hostname}:${this.config.server.port}...`);\n    };\n  }\n\n  /**\n   * Initializes and attaches common middleware to the app.\n   * <code>initializeMiddleware</code> is called prior to attaching the\n   * <code>error</code> middleware in order for implementations to easily\n   * attach custom middleware.\n   *\n   * @return {void}\n   */\n  initialize(): void {\n    // Add common request security measures\n    this.app.use(helmet());\n\n    // Enabled CORS (corss-origin resource sharing)\n    this.app.use(cors(this.config.cors));\n\n    // request compression\n    this.app.use(compress(this.config.compress));\n\n    // Initialize body parser before routes or body will be undefined\n    this.app.use(body(this.config.body));\n\n    // Trace a single request process (including over async)\n    this.app.use(transactionMiddleware);\n\n    // Configure Request logging\n    this.app.use(accessLogger);\n\n    // Configure the request error handling\n    this.app.use(errorMiddleware);\n  }\n\n  /**\n   * Given the common/core <code>Router</code> and an application-specific\n   * <code>Router</code>, merge the app-specific <code>Router</code> into the\n   * core <code>Router</code> and mount the product to the <code>app</code>.\n   *\n   * @param  {Object} router\n   * @param  {Object} appRouter\n   * @return {void}\n   */\n  initializeRouter(appRouter: ?Object): void {\n    // Combine with application-specific router\n    if (appRouter) {\n      baseRouter.use(appRouter.routes());\n    }\n\n    this.app.use(baseRouter.routes());\n    this.app.use(baseRouter.allowedMethods());\n\n    return baseRouter;\n  }\n\n  /**\n   * Performs any common cleanup and notifies any listeners of the tear-down\n   * by emitting the `destroy` event locally and on the <code>process</code>.\n   *\n   * @see {@link stop}\n   * @return {void}\n   */\n  destroy(): void {\n    // TODO logger destroy?\n    this.emit('destroy');\n    process.emit('destroy');\n  }\n\n  /**\n   * Starts the server.\n   * Starting the server will create an HTTP or HTTPS server, depending on\n   * configuration, with the provided callback and begin listening on the\n   * configured hostname/port.\n   * If any errors are encountered while starting the server, the error is\n   * logged and <code>destroy</code> is called prior to the process exiting.\n   * Returns the created server instance upon successful startup.\n   *\n   * @see {@link https://nodejs.org/api/http.html}\n   * @see {@link createServer}\n   * @see {@link getListenCallback}\n   * @see {@link destroy}\n   * @param {Function|null} callback\n   * @return {Object}\n   */\n  start(callback: Function | null = null): void {\n    if (!this.app) {\n      throw new Error('Cannot start server: the express instance is not defined');\n    }\n\n    try {\n      this.emit('before:start');\n      this.app.server = this.createServer().listen(\n        this.config.get('port'),\n        this.config.get('hostname'),\n        this.config.get('backlog'),\n        this.getListenCallback(callback),\n      );\n      this.emit('after:start');\n      return this.app.server;\n    } catch (e) {\n      this.logger.error(e);\n      this.destroy();\n\n      return null;\n    }\n  }\n\n  /**\n   * Stops the server by executing the following routines:\n   * 1. Emits `before:stop`\n   * 2. Invokes the provided callback, if one is provided\n   * 3. Stops the server from accepting any new connections\n   * 4. Calls <code>destroy</code>\n   * 5. Emits `after:stop`\n   *\n   * @see {@link https://nodejs.org/api/net.html#net_server_close_callback}\n   * @see {@link destroy}\n   * @param  {Function|null} callback\n   * @return {void}\n   */\n  stop(callback: Function | null = null): void {\n    this.logger.info(`Server (${this.config.hostname}:${this.config.port}) stopping...`);\n\n    this.emit('before:stop');\n    if (callback) {\n      callback();\n    }\n\n    this.app.server.close();\n    this.destroy();\n    this.emit('after:stop');\n  }\n}\n","/**\n * @module utils/logger\n * @exports DEFAULT_LOGGER_NAME\n * @exports Logger\n */\nimport Bunyan from 'bunyan';\nimport config from 'config';\nimport process from 'process';\n\nexport const DEFAULT_LOGGER_NAME: string = 'root';\n\n/*\n * BEGIN NOTE: example of stream config\n  streamConfig = Object.assign({}, streamsConfig.get('cloudwatch'));\n  streamConfig.logStreamName += `-${process.pid}-${uuidv4()}`;\n  logger.addStream({\n    name: 'cloudwatch',\n    type: 'raw',\n    stream: createCWStream(Object.assign({}, streamConfig)),\n  });\n * END NOTE\n */\n\n/**\n * Implementation of the <code>Bunyan</code> logger that provides a static\n * access method to retrieve configuration logger instances and to extend the\n * logging output behavior to include our request <code>trasnaction</code>\n * data as additional log metadata.\n *\n * @see {@link https://github.com/trentm/node-bunyan}\n *\n * @class\n * @extends Bunyan\n */\nclass Logger extends Bunyan {\n  // loggers cache\n  static loggers: Object = {};\n\n  /**\n   * Extends <code>Bunyan</code>'s functionality to include the\n   * <code>transaction</code> data in the log output. Calls\n   * <code>Bunyan._emit</code> with the modified log record.\n   * <code>_emit</code> is responsible for writing a log record to the logger\n   * instance's output.\n   *\n   * @param  {Object} rec     The log record to emit\n   * @param  {boolean} noemit Flag controlling if the current record should be\n   *                          emitted or not\n   * @return {void}\n   */\n  _emit(rec: Object, noemit: boolean): void {\n    const r: Object = this.serializeTransaction(rec);\n\n    // eslint-disable-next-line no-underscore-dangle\n    return super._emit(r, noemit);\n  }\n\n  /**\n   * Generates a formatted object from the <code>transaction</code> data\n   * attached to the current <code>process.domain</code>. If such a\n   * <code>transaction</code> exists, get the <code>transaction</code>'s\n   * ID and the request context (Koa context).\n   * Attach the <code>transaction</code> ID to the record, as well as\n   * the session ID, if a session exists, and some basic information about the\n   * current logged-in user, if a user exists.\n   *\n   * The session is found on the context as <code>ctx.session</code>, and the\n   * use is found on the context as <code>ctx.user</code>.\n   *\n   * @param  {rec} Object The log record to emit\n   * @return {Object}     The modified log record\n   */\n  serializeTransaction(rec: Object): Object {\n    const r: Object = rec;\n    const transaction: Object = process.domain;\n\n    if (transaction && transaction.data) {\n      const { ctx } = transaction.data;\n\n      r.transactionId = transaction.data.id;\n      if (ctx.session) {\n        r.sessionId = ctx.session.id;\n      }\n\n      if (ctx.user) {\n        r.user = {\n          id: ctx.user.id,\n          username: ctx.user.username,\n        };\n      }\n    }\n\n    return rec;\n  }\n\n  /**\n   * Retrieve a logger instance by name by looking up the looger in the logger\n   * cache. If no logger name is provide, the default logger\n   * (<code>root</code>) is returned. If no logger by the provided name exists\n   * and the logger name is found in the configuration, then a new logger is\n   * created and returned; otherwise an <code>Error</code> is thrown.\n   *\n   * @param  {string} name\n   * @return {Object}\n   */\n  static getLogger(name: string = null): Object {\n    const handlersConfig: Object = config.loggers.handlers;\n    const loggerName: string = (name == null) ? DEFAULT_LOGGER_NAME : name.toLowerCase();\n\n    if (!(loggerName in Logger.loggers)) {\n      if (!(loggerName in handlersConfig)) {\n        throw new Error(`Unable to create logger: no logger for \"${loggerName}\" found in configuration`);\n      }\n\n      Logger.loggers[loggerName] = new Logger(handlersConfig[loggerName]);\n    }\n\n    return Logger.loggers[loggerName];\n  }\n}\n\nexport default Logger;\n","/**\n * @module utils/sigInitHandler\n * @exports sigInitHandler\n */\nimport Logger from 'axon/utils/logger';\n\nconst LOGGER: Object = Logger.getLogger();\n\n/**\n * Handler for capturing a the <code>siginit</code> event and stopping the\n * current process.\n * @return {void}\n */\nexport default function sigInitHandler(): void {\n  if (LOGGER) {\n    LOGGER.info('Captured ctrl-c');\n  }\n\n  process.exit(0);\n}\n","/**\n * @module utils/uncaughtExceptionHandler\n * @exports uncaughtExceptionHandler\n */\nimport Logger from 'axon/utils/logger';\n\nconst LOGGER: Object = Logger.getLogger('error');\n\n/**\n * Called when the process encounters an uncaught <code>Error</code>.\n * The <code>Error</code> is logged and the process exits in error.\n * @param  {Error} e\n * @return {void}\n */\nexport default function uncaughtExceptionHandler(e: Error): void {\n  if (LOGGER) {\n    LOGGER.error('An unhandled exception occurred. Server is exiting...');\n    LOGGER.error(e);\n  }\n\n  process.exit(1);\n}\n","/**\n * @module utils/unhandledRejectionHandler\n * @exports unhandledRejectionHandler\n */\nimport Logger from 'axon/utils/logger';\n\nconst LOGGER: Object = Logger.getLogger('error');\n\n/**\n * Called when the process encounteres an unhandled Promise rejection.\n * The <code>Error</code> from the rejected Promise is logged and the event\n * loop is allowed to continue.\n * @param  {Error} e\n * @return {void}\n */\nexport default function unhandledRejectionHandler(e: Error): void {\n  if (LOGGER) {\n    LOGGER.error(`An unhandled promise rejection occurred: ${e}`);\n  }\n}\n","module.exports = require(\"bunyan\");","module.exports = require(\"config\");","module.exports = require(\"domain\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","module.exports = require(\"koa\");","module.exports = require(\"koa-body\");","module.exports = require(\"koa-compress\");","module.exports = require(\"koa-cors\");","module.exports = require(\"koa-helmet\");","module.exports = require(\"koa-morgan\");","module.exports = require(\"koa-router\");","module.exports = require(\"process\");","module.exports = require(\"uuid/v4\");"],"sourceRoot":""}